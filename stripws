#!/usr/bin/perl
#
# stripws -- part of MBPerl
#
# Copyright (c) 2005-2021 Michael Banack <github@banack.net>
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

BEGIN {
    if (defined($ENV{'HOME'})) {
        eval("use lib '$ENV{HOME}/bin/MBPerl'");
    } else {
        my $USERNAME = getpwuid($<);
        if ($USERNAME eq 'root') {
            eval("use lib '/root/bin/MBPerl'");
        } elsif (-d "/home/" . $USERNAME) {
            eval("use lib '/home/$USERNAME/bin/MBPerl'");
        }
    }
}

use MBBasic;

use strict;
use warnings;

$MBBasic::PROGRAM_VERSION = "1.3";
$MBBasic::PROGRAM_AUTHOR = "Michael Banack";
$MBBasic::PROGRAM_COPYRIGHT_DATE = "2005-2021";

my $gStripWSOptions = {
    "noLines|n!" => { desc => "Leave newlines intact",
                      default => FALSE, },
    "linesOnly|l!" => { desc => "Strip only newlines",
                        default => FALSE, },
};

sub ExtraUsage() {
    Console("Usage: $MBBasic::PROGRAM_NAME [options]\n");
    Console("\t$MBBasic::PROGRAM_NAME: Read lines from stdIn and remove the whitespace\n");
}

sub Main() {
    MBBasic::SetExtraUsage(\&ExtraUsage);
    MBBasic::LoadOptions($gStripWSOptions, 'stripws');
    MBBasic::Init();

    my $keepNewlines = FALSE;
    my $stripWS = TRUE;

    if ($OPTIONS->{'noLines'}) {
        $keepNewlines = TRUE;
    }
    if ($OPTIONS->{'linesOnly'}) {
        $stripWS = FALSE;
    }

    my $temp;
    while($temp=<STDIN>) {
        if ($stripWS) {
            $temp =~ s/\s+//g;
        }
        $temp =~ s/\n$//;

        Console($temp);

        if ($keepNewlines) {
            Console("\n");
        }
    }

    MBBasic::Exit();
}

# Call the main routine.
my $exitCode;
eval {
    $exitCode = Main();
}; Panic($@) if $@;
exit $exitCode;
